--
-- PostgreSQL database dump
--

-- Dumped from database version 14.0
-- Dumped by pg_dump version 14.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: dell_books_trig(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dell_books_trig() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		BEGIN
			DELETE FROM orders WHERE id_book = OLD.id;
			--DELETE FROM writers_books WHERE id = OLD.id_name_book;
			RETURN OLD;
		END;
	$$;


ALTER FUNCTION public.dell_books_trig() OWNER TO postgres;

--
-- Name: dell_customers_trig(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dell_customers_trig() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
		DELETE FROM orders WHERE id_customer = OLD.id;
		RETURN OLD;
    END;
$$;


ALTER FUNCTION public.dell_customers_trig() OWNER TO postgres;

--
-- Name: dell_orders_trig(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dell_orders_trig() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
		DELETE FROM customers WHERE customers.id = OLD.id_customer;
		--UPDATE writers_books SET writer_id = NULL WHERE writer_id = OLD.id;
		RETURN OLD;
    END;
$$;


ALTER FUNCTION public.dell_orders_trig() OWNER TO postgres;

--
-- Name: dell_writers_trig(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.dell_writers_trig() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
		DELETE FROM contracts WHERE id = OLD.id;
		UPDATE writers_books SET writer_id = NULL WHERE writer_id = OLD.id;
		RETURN OLD;
    END;
$$;


ALTER FUNCTION public.dell_writers_trig() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: books; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books (
    id integer NOT NULL,
    cipher_of_the_book integer NOT NULL,
    name character varying NOT NULL,
    title character varying NOT NULL,
    circulation integer NOT NULL,
    release_date date NOT NULL,
    cost_price real NOT NULL,
    sale_price real NOT NULL,
    fee real NOT NULL,
    CONSTRAINT books_cipher_of_the_book_check CHECK (((cipher_of_the_book >= 10000000) AND (cipher_of_the_book <= 99999999))),
    CONSTRAINT books_circulation_check CHECK ((circulation > 0)),
    CONSTRAINT books_cost_price_check CHECK ((cost_price > (0)::double precision)),
    CONSTRAINT books_fee_check CHECK ((fee > (0)::double precision)),
    CONSTRAINT books_name_check CHECK (((name)::text <> ''::text)),
    CONSTRAINT books_sale_price_check CHECK ((sale_price > (0)::double precision)),
    CONSTRAINT books_title_check CHECK (((title)::text <> ''::text))
);


ALTER TABLE public.books OWNER TO postgres;

--
-- Name: books_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.books_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.books_id_seq OWNER TO postgres;

--
-- Name: books_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.books_id_seq OWNED BY public.books.id;


--
-- Name: contracts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contracts (
    id integer NOT NULL,
    id_writer integer NOT NULL,
    contract_number integer NOT NULL,
    date_of_cons_contract date NOT NULL,
    term_of_the_contract integer NOT NULL,
    validy_of_the_contract boolean NOT NULL,
    date_of_terminition_contract date NOT NULL,
    CONSTRAINT contracts_contract_number_check CHECK (((contract_number >= 10000000) AND (contract_number <= 99999999))),
    CONSTRAINT contracts_id_writer_check CHECK ((id_writer > 0))
);


ALTER TABLE public.contracts OWNER TO postgres;

--
-- Name: contracts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.contracts_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.contracts_id_seq OWNER TO postgres;

--
-- Name: contracts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.contracts_id_seq OWNED BY public.contracts.id;


--
-- Name: customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customers (
    id integer NOT NULL,
    customer_name character varying NOT NULL,
    address character varying NOT NULL,
    phone text NOT NULL,
    full_name_customer character varying NOT NULL,
    CONSTRAINT customers_address_check CHECK (((address)::text <> ''::text)),
    CONSTRAINT customers_customer_name_check CHECK (((customer_name)::text <> ''::text)),
    CONSTRAINT customers_full_name_customer_check CHECK (((full_name_customer)::text <> ''::text))
);


ALTER TABLE public.customers OWNER TO postgres;

--
-- Name: customers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.customers_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.customers_id_seq OWNER TO postgres;

--
-- Name: customers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.customers_id_seq OWNED BY public.customers.id;


--
-- Name: orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.orders (
    id integer NOT NULL,
    id_customer integer NOT NULL,
    order_number integer NOT NULL,
    date_of_receipt_order date NOT NULL,
    order_completion_date date NOT NULL,
    id_book integer NOT NULL,
    numbers_of_order integer NOT NULL,
    CONSTRAINT orders_id_book_check CHECK ((id_book > 0)),
    CONSTRAINT orders_id_customer_check CHECK ((id_customer > 0)),
    CONSTRAINT orders_numbers_of_order_check CHECK ((numbers_of_order > 0)),
    CONSTRAINT orders_order_number_check CHECK (((order_number >= 10000000) AND (order_number <= 99999999)))
);


ALTER TABLE public.orders OWNER TO postgres;

--
-- Name: orders_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.orders_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.orders_id_seq OWNER TO postgres;

--
-- Name: orders_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.orders_id_seq OWNED BY public.orders.id;


--
-- Name: writers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.writers (
    id integer NOT NULL,
    passport_number integer NOT NULL,
    surname character varying NOT NULL,
    name character varying NOT NULL,
    middle_name character varying,
    address character varying NOT NULL,
    phone text NOT NULL,
    books_id integer,
    CONSTRAINT writers_address_check CHECK (((address)::text <> ''::text)),
    CONSTRAINT writers_name_check CHECK (((name)::text <> ''::text)),
    CONSTRAINT writers_passport_number_check CHECK (((passport_number >= 10000000) AND (passport_number <= 99999999))),
    CONSTRAINT writers_surname_check CHECK (((surname)::text <> ''::text))
);


ALTER TABLE public.writers OWNER TO postgres;

--
-- Name: writers_books; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.writers_books (
    book_id integer,
    writer_id integer,
    books_id integer,
    writers_id integer,
    CONSTRAINT writers_books_book_id_check CHECK ((book_id > 0)),
    CONSTRAINT writers_books_writer_id_check CHECK ((writer_id > 0))
);


ALTER TABLE public.writers_books OWNER TO postgres;

--
-- Name: writers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.writers_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.writers_id_seq OWNER TO postgres;

--
-- Name: writers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.writers_id_seq OWNED BY public.writers.id;


--
-- Name: books id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books ALTER COLUMN id SET DEFAULT nextval('public.books_id_seq'::regclass);


--
-- Name: contracts id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts ALTER COLUMN id SET DEFAULT nextval('public.contracts_id_seq'::regclass);


--
-- Name: customers id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers ALTER COLUMN id SET DEFAULT nextval('public.customers_id_seq'::regclass);


--
-- Name: orders id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders ALTER COLUMN id SET DEFAULT nextval('public.orders_id_seq'::regclass);


--
-- Name: writers id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.writers ALTER COLUMN id SET DEFAULT nextval('public.writers_id_seq'::regclass);


--
-- Data for Name: books; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books (id, cipher_of_the_book, name, title, circulation, release_date, cost_price, sale_price, fee) FROM stdin;
1	82683292	Bibendum Ullamcorper Duis Institute	Non Vestibulum Nec Corp.	11777	1998-01-21	1136	2266	1915
3	27150389	Commodo Incorporated	A Facilisis Incorporated	18008	2029-02-05	870	2421	1212
4	98895008	Non LLC	Integer Vitae Corporation	26608	2026-10-27	893	1287	2435
5	17714730	Ligula Incorporated	Est Company	8342	2021-12-07	835	2448	1409
6	20104671	Habitant Morbi Associates	Ultrices A Corp.	14933	2014-10-23	869	1631	823
7	11338245	In Felis Nulla Institute	Sed Consequat Incorporated	92352	1994-03-13	1040	1402	2321
8	38622899	Dis Parturient Montes Inc.	Eu Tellus Inc.	82850	2002-11-20	808	1756	2177
9	85196206	Et Commodo Institute	Euismod Urna Consulting	59091	2024-08-08	1175	2164	1620
10	59629715	Non Limited	Urna Justo Ltd	79486	2023-11-07	918	2170	1413
11	80366229	Dapibus Quam LLP	Quis Diam Corporation	87717	2017-10-04	1139	1454	1007
12	99513999	Fusce Aliquam Enim LLC	Nec Corp.	242	2029-06-30	873	2219	1605
13	74887678	Lobortis Tellus Foundation	Neque Nullam Ut Industries	52025	2002-02-21	1049	2107	2325
14	34606125	Vitae Erat Associates	Tellus Phasellus Elit LLC	21931	2027-10-28	882	1387	710
15	72641452	Posuere LLP	Nullam Industries	57594	2010-11-11	836	2404	1631
16	20205702	Pellentesque Incorporated	Vivamus Sit Amet Associates	29967	2004-01-16	1195	2140	1043
17	12393163	Mauris Institute	Risus A Associates	81126	1997-11-26	1012	2400	2350
18	68470242	Ligula Eu Inc.	Lorem Eu Corp.	70253	2032-03-08	1197	2200	705
19	13332815	Mauris Corp.	Vivamus Rhoncus Donec Associates	39124	1999-05-15	899	1406	2140
20	94217747	Non Leo Ltd	Tincidunt Aliquam Arcu Consulting	98202	1998-10-18	881	1438	630
21	25476508	Mattis LLC	Eget Inc.	12539	2015-05-25	901	1540	1902
22	51848796	Augue Malesuada Incorporated	Phasellus Institute	18302	2036-03-31	963	2354	1903
23	37631217	Ullamcorper Magna Ltd	Montes Limited	68314	2016-03-19	929	2494	1294
24	83600204	Amet Associates	Sed Foundation	91517	2035-07-26	1190	1616	1983
25	52861019	Eros Incorporated	Id Risus Inc.	74163	2010-09-08	1074	2375	1033
26	96665985	Sit Amet Corp.	Gravida Mauris Ut Corp.	52591	2017-07-21	920	2297	1745
27	10478981	Lectus Convallis Inc.	Quis Arcu Vel Ltd	61771	2026-11-24	870	1671	2131
28	18997036	Duis A Corp.	Mauris Sit Foundation	18594	2027-08-01	842	1782	1377
29	58462844	Facilisis Eget Inc.	Odio Nam Consulting	89358	2020-02-15	1125	2404	2442
30	41282113	Nulla Dignissim Ltd	Sed Pede Corp.	79076	2029-03-27	1156	1627	2060
31	25811201	Libero Morbi Accumsan Foundation	Curae Phasellus PC	66149	2014-05-31	1028	2110	833
32	85402348	Lacinia Orci Foundation	Sed Neque PC	31412	2004-12-15	811	1835	2145
33	12918819	Ipsum Incorporated	Tempor Diam Inc.	33418	2027-09-02	1025	2289	2409
34	65368194	Sit Amet Corporation	Tempus Lorem Limited	24004	2008-03-14	965	2082	1821
35	44829046	Turpis Nulla Corp.	Rhoncus Associates	24443	2011-10-23	1197	1683	1846
36	29210686	Dui Cras Foundation	Mauris Integer Consulting	54556	2025-01-07	993	1835	1378
37	59018222	Et Limited	Nulla Eget Associates	4991	1996-03-14	934	1484	1798
38	48790364	Consequat Dolor Industries	Convallis Dolor Industries	90722	2004-01-02	940	2071	896
39	33512232	Sit Amet Luctus Industries	Tristique Aliquet Consulting	92705	1994-01-19	874	1716	1215
40	69976688	Dui Nec Urna Institute	Mi Felis LLP	82531	2012-10-22	849	2491	2202
2	25207216	Ornare Sagittis Foundation	Vestibulum Neque Sed Inc.	31930	2019-05-06	857	1819	1280
\.


--
-- Data for Name: contracts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contracts (id, id_writer, contract_number, date_of_cons_contract, term_of_the_contract, validy_of_the_contract, date_of_terminition_contract) FROM stdin;
3	43	84321159	2016-06-02	1	f	2017-03-06
4	47	87615941	2019-05-08	9	t	2001-11-16
6	39	80299327	2018-11-08	7	f	2006-04-22
8	49	78582022	2022-06-04	7	t	2006-02-26
9	22	11605708	2022-09-08	8	f	2021-12-09
10	49	71831532	1994-03-05	9	f	2034-01-15
11	17	35774601	2016-03-21	4	f	2030-08-24
12	32	80875315	2006-04-15	6	t	2016-02-14
13	38	21190126	1995-08-01	4	f	2002-06-21
14	24	42030644	2018-07-31	9	t	2037-05-01
15	23	73623201	2019-11-28	4	t	2017-01-23
17	29	77092170	1991-10-10	5	t	2019-01-26
18	11	56970252	1992-01-14	9	f	2037-10-12
19	27	54999776	2010-08-12	10	f	2005-06-29
20	36	89365101	2011-02-08	7	f	2038-12-06
22	19	42672119	2010-06-05	8	t	2013-08-31
23	33	63405373	2005-01-11	10	f	2028-12-12
24	44	63067908	1999-12-29	3	f	2017-12-07
25	12	42822193	2002-03-26	6	t	2021-06-11
26	34	76669550	1992-02-03	1	f	2028-01-30
27	15	14275938	2022-02-10	1	f	2001-09-16
28	36	20225886	2021-10-17	7	f	2039-04-03
29	3	22201686	2014-04-07	3	t	2037-10-22
30	13	65910127	2009-02-14	9	f	2013-10-01
31	2	20965254	2022-09-17	8	f	2039-05-27
33	9	82541058	2017-04-16	8	f	2019-07-21
34	37	56013949	1994-08-16	2	t	2029-10-26
35	20	89465834	2018-10-06	7	f	2005-07-21
1	12	91495921	1992-10-03	7	t	2039-04-29
2	34	40092316	2006-03-23	3	t	2008-04-09
\.


--
-- Data for Name: customers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customers (id, customer_name, address, phone, full_name_customer) FROM stdin;
1	Dictum Augue Incorporated	Ap #564-7680 Velit Street	+1 737-529-8673	Mathews, Audra Y.
2	Urna Nullam Lobortis Inc.	337-9800 Blandit St.	+1 717-724-3552	Kirk, Dillon F.
3	Ultrices Sit Amet Limited	Ap #684-1069 Laoreet Street	+1 440-444-8187	Swanson, Cyrus Y.
4	Faucibus Lectus Incorporated	Ap #879-6568 Ornare. Rd.	+1 314-653-1745	Wallace, Zachary D.
5	Augue PC	742-1588 In, Road	+1 687-115-5356	Slater, Cally L.
6	Vestibulum LLP	5969 Vehicula. Street	+1 524-746-1671	Francis, Althea C.
7	Tempor Incorporated	Ap #44+1 1429 Laoreet St.	+1 571-591-0639	Chandler, Warren X.
8	Adipiscing Lobortis Inc.	162-7945 At, Rd.	+1 132-490-8185	Russell, Eleanor E.
9	Nullam Feugiat Placerat Limited	691 Aliquet Av.	+1 748-612-6388	Stanley, Forrest H.
10	Nullam Vitae Inc.	9836 Pulvinar Rd.	+1 159-377-9143	Lindsay, Joy C.
11	Quis Accumsan Convallis LLC	562-9882 Felis Avenue	+1 306-745-4549	Carpenter, Nichole O.
12	Adipiscing Ligula Inc.	Ap #380-5114 Porttitor St.	+1 273-685-2805	Hull, Marcia W.
13	Ornare In Corp.	8274 Ut St.	+1 612-637-2455	Contreras, Keiko H.
14	Risus Associates	P.O. Box 923, 8385 Sed Rd.	+1 573-463-3266	Mills, Gregory W.
15	Lectus A Institute	562-9355 Sem Av.	+1 325-446-6383	Castro, Wesley O.
16	Accumsan Laoreet LLP	7344 Sagittis Street	+1 135-536-1207	Greer, Francis Z.
17	In Faucibus Corp.	Ap #655-6005 Molestie St.	+1 510-442-5866	Charles, Xyla A.
18	Purus Duis Elementum Incorporated	800-6483 Ut St.	+1 914-575-7481	Mccullough, Ayanna D.
19	Elit Pede Industries	482-1219 Molestie Av.	+1 762-635-4781	Terrell, Wing L.
20	Nisi A Consulting	8887 Vivamus St.	+1 461-520-2680	Lowery, Quail X.
21	Eu PC	Ap #826-8591 Dictum Ave	+1 875-469-5477	Clayton, Amity T.
22	Pellentesque Tincidunt Tempus Corp.	21+1 6380 Tempor Rd.	+1 437-250-0282	Whitaker, Halee V.
23	Egestas Corporation	4759 Nulla Road	+1 376-519-6266	Hicks, Tanner X.
24	Dui Lectus Rutrum Foundation	Ap #662-8546 Aliquam St.	+1 302-355-6928	Martin, Faith X.
25	Dui LLP	Ap #383-545 Aenean Rd.	+1 215-651-0531	Huber, Melinda L.
26	Amet Risus LLP	185-9094 Interdum Avenue	+1 208-742-8751	Allison, Harper J.
27	Elit Pharetra Corporation	464-8100 Id, Av.	+1 426-673-7380	Gilliam, Walker F.
28	Natoque LLP	8493 Non, Av.	+1 352-793-5475	George, Flavia K.
29	Sed Nulla Corp.	3946 Sapien St.	+1 528-636-6443	Morgan, Charde B.
30	Mauris Morbi Institute	81+1 6403 Mauris Avenue	+1 747-885-0353	Bean, Kane R.
31	Lobortis Nisi Nibh Industries	Ap #225-1188 Sollicitudin Road	+1 431-887-0612	Anthony, Kaye J.
32	Eros Nam Consequat Ltd	Ap #777-8297 Nulla. Avenue	+1 872-792-1231	Alvarez, Rafael B.
33	Ante Lectus Associates	P.O. Box 428, 9725 Nulla Avenue	+1 838-446-1281	Edwards, Marvin T.
34	Vel Est Tempor Company	5886 Egestas Road	+1 583-555-8270	Kim, Alec C.
35	Per Inceptos Hymenaeos Limited	6796 Urna, Ave	+1 746-606-2208	Marks, Anjolie R.
36	Vitae Aliquet Corp.	Ap #206-6272 Non Rd.	+1 604-327-2530	Clemons, Len K.
37	Metus Consulting	Ap #465-5678 Ac Road	+1 617-581-8328	Barber, Hedwig P.
38	Duis LLP	Ap #364-4762 Aliquam Rd.	+1 524-253-6869	Ratliff, Morgan B.
39	Cursus Et Inc.	150-4809 Magna. Street	+1 383-553-2356	Houston, Echo C.
40	Fringilla PC	Ap #364-9829 Lacus. St.	+1 221-737-7489	English, Hayden I.
41	Morbi Accumsan Ltd	638-9999 Eleifend Rd.	+1 967-761-7968	Edwards, Cheryl H.
42	Rhoncus Id Industries	5800 Amet, Road	+1 175-749-3765	Wood, Claire Z.
43	Vulputate Ullamcorper Inc.	5374 Eros. Road	+1 815-203-5360	Mcdonald, Melanie E.
44	Sagittis Foundation	7924 Bibendum St.	+1 782-756-4444	Oneal, Jasper K.
45	Sodales Purus Industries	P.O. Box 758, 7905 Sed Av.	+1 419-387-2159	Montgomery, Sonia T.
46	Imperdiet Incorporated	P.O. Box 967, 504 Augue Avenue	+1 988-831-5031	Gonzalez, Hayes U.
47	Vestibulum Lorem Inc.	8727 Lacus. Rd.	+1 344-539-6437	Lyons, Alexis P.
48	Amet Ante Incorporated	7655 Ligula. Rd.	+1 393-645-4381	Bridges, Caesar K.
49	Donec Elementum Industries	4873 Lorem Rd.	+1 699-352-0106	Peterson, Jerome R.
50	Bibendum Institute	Ap #860-3645 Diam. Rd.	+1 450-758-5957	Lawson, Selma Z.
\.


--
-- Data for Name: orders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.orders (id, id_customer, order_number, date_of_receipt_order, order_completion_date, id_book, numbers_of_order) FROM stdin;
1	15	59680447	1992-05-01	2015-04-21	21	133
2	36	87773830	2005-03-11	2014-11-28	2	644
3	50	85926613	2022-01-03	1993-02-02	38	1130
4	6	68540855	2011-04-09	1996-10-05	11	154
5	27	90196390	2019-06-15	2020-04-29	29	1274
6	46	17196532	2022-07-12	2009-11-14	4	1564
7	19	38857530	2011-05-26	2015-12-27	33	496
8	38	82108444	2020-06-13	2009-02-25	17	1036
9	15	40018429	2015-03-28	2018-09-22	13	593
10	4	84234046	1995-02-22	2001-11-11	36	1899
11	2	59974172	2007-05-25	2009-08-22	9	1407
12	8	98512837	2006-11-30	1992-12-13	34	433
13	6	14555348	1999-12-22	1999-09-16	30	651
14	4	88717432	2000-05-18	2003-11-15	11	1278
15	8	94505218	2016-06-19	2011-03-29	29	1168
16	35	62027673	2000-08-11	2008-12-26	22	817
17	16	19630528	1992-07-17	2010-12-04	13	628
18	4	86971947	2014-11-27	2014-01-11	15	1158
19	34	55893300	1993-02-02	2004-12-15	37	287
20	28	38016605	2003-06-11	2019-01-16	21	1633
21	8	59517251	1994-09-11	2005-03-04	5	285
22	46	28878307	1995-04-20	2021-11-18	32	378
23	35	15662041	1998-03-19	2018-08-04	31	1478
24	17	95955089	1992-12-02	2017-07-18	7	822
25	43	75642269	2018-09-05	1998-10-06	18	1530
26	29	15424589	2003-03-24	2019-06-12	39	1519
27	1	27937590	2021-02-05	2010-06-11	33	1940
28	49	21368942	1998-01-26	2018-09-14	6	1078
29	3	97543208	2003-04-20	2020-11-19	37	1926
30	25	34756669	2013-04-25	1993-10-25	2	1632
\.


--
-- Data for Name: writers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.writers (id, passport_number, surname, name, middle_name, address, phone, books_id) FROM stdin;
1	12896640	Burke	Driscoll	Margaret	764-167 In St.	+1 200-285-8151	\N
2	18508155	Kerr	Fitzgerald	Vivien	P.O. Box 631, 9898 Nibh. Street	+1 337-854-1778	\N
3	56993627	Mcclure	Hammett	Alika	P.O. Box 866, 3906 Euismod Av.	+1 907-468-3748	\N
4	89822116	Ball	Kato	Mira	Ap #553-5855 Tellus. Road	+1 343-661-7446	\N
5	95379214	Fuller	Kamal	Ayanna	Ap #729-9956 Iaculis Road	+1 936-336-9514	\N
6	89810276	Burris	Colorado	Aileen	429-2644 Libero. Road	+1 571-661-5014	\N
8	76448323	Caldwell	Mufutau	Kaitlin	P.O. Box 504, 7665 Pede. Av.	+1 463-911-1198	\N
9	69910366	Preston	Daquan	Darrel	P.O. Box 406, 5540 Non Street	+1 858-425-2436	\N
10	91302152	House	Cade	Suki	Ap #687-5345 Mauris Rd.	+1 924-726-6286	\N
11	44822520	Emerson	Geoffrey	Ramona	266-6336 Neque Rd.	+1 164-320-6420	\N
12	90522976	Harvey	Judah	Kylynn	7482 Dapibus Rd.	+1 200-180-8422	\N
13	74023461	Manning	Noble	Scarlett	P.O. Box 246, 6868 Donec Road	+1 626-270-9844	\N
14	46477390	Vega	Magee	Mona	Ap #429-7982 Aliquam, St.	+1 508-952-1645	\N
15	49517775	Vega	John	Demetria	Ap #376-6169 Nisi Avenue	+1 223-981-5145	\N
16	99525193	Sargent	Bruno	Kerry	Ap #784-9797 Sed, Rd.	+1 311-337-1683	\N
17	96260350	Gray	Chase	Ginger	P.O. Box 270, 7249 Nunc Rd.	+1 418-142-9649	\N
18	28772440	Daugherty	Joseph	Scarlet	4843 Blandit Avenue	+1 717-293-8039	\N
19	88751503	Burnett	Elliott	Imelda	P.O. Box 685, 6210 Semper Rd.	+1 814-806-2464	\N
20	82775390	Salas	Dorian	Fredericka	825-442 Suspendisse St.	+1 897-579-8267	\N
21	81223720	Salazar	Asher	Cherokee	Ap #336-8620 Egestas Street	+1 778-314-0861	\N
22	53330845	Gilmore	Kasimir	Kiayada	275-1011 Vulputate, St.	+1 972-357-6847	\N
23	30905540	Bernard	Grant	Patience	8757 Fermentum Rd.	+1 917-324-2715	\N
24	75706449	Rogers	Mannix	Yoko	366-9050 Ut Street	+1 694-483-3709	\N
25	59650918	Hendricks	Craig	Charlotte	Ap #589-5210 Velit St.	+1 676-530-4830	\N
26	15289673	Lang	Nathan	Amela	186-7837 Varius. Rd.	+1 603-672-1142	\N
27	37554728	Alford	Benjamin	Tanisha	4200 Curabitur Rd.	+1 463-667-5182	\N
28	56611329	O`donnell	Joel	Allegra	Ap #803-728 Cras Rd.	+1 817-337-5275	\N
29	29130909	Burris	Aladdin	Diana	307-4952 Leo, Road	+1 227-307-6584	\N
30	23852114	Bell	Hakeem	Christen	Ap #160-5908 Faucibus Avenue	+1 837-530-7306	\N
31	20397809	Clark	Kennedy	Kim	951-2852 Varius. St.	+1 571-377-7269	\N
32	64946624	Reynolds	Neil	Kylie	509-3763 Libero. Street	+1 382-534-1357	\N
33	60019937	Le	Benedict	Charissa	590-410 Ligula Rd.	+1 887-383-1171	\N
34	14072839	Dotson	Lance	Amaya	P.O. Box 253, 1125 Tellus, Street	+1 267-853-7421	\N
35	96047147	Farrell	Ulysses	Aline	7201 Enim, Road	+1 516-323-1329	\N
36	34066235	Santos	Tyler	Wilma	183-3218 Tincidunt Road	+1 838-131-8542	\N
37	40256926	Bush	Baxter	Kitra	Ap #404-6194 Fringilla Street	+1 167-535-6536	\N
38	89284187	Donovan	Lars	Haviva	Ap #597-3734 Donec Road	+1 474-540-7941	\N
39	77740105	Burton	Ahmed	Kiara	Ap #190-785 Nostra, Road	+1 898-445-5955	\N
40	71615400	Morales	Hammett	Callie	688 Urna St.	+1 714-232-8685	\N
41	23023372	Roberson	Andrew	Emily	1611 Eleifend Av.	+1 657-484-9772	\N
42	10659765	Klein	Keane	Erica	195-3382 Amet Avenue	+1 326-107-2124	\N
43	45352386	Cooke	Jermaine	Kessie	7348 Mauris Road	+1 905-796-2993	\N
44	59227568	Lester	Colorado	Meredith	Ap #425-9465 Lacus. Road	+1 738-294-5251	\N
45	71511520	Trevino	Demetrius	Brynn	Ap #550-605 Neque Av.	+1 917-873-4424	\N
46	11777684	Golden	Walter	Claire	P.O. Box 818, 2816 Ut, Ave	+1 358-372-8635	\N
47	61490776	Robbins	Merrill	Gretchen	8078 Orci, Av.	+1 441-457-0346	\N
48	37582527	Cox	Brian	Lisandra	212 Tristique Avenue	+1 744-465-9790	\N
49	43073273	Bender	Forrest	Illiana	Ap #467-6171 Enim Avenue	+1 298-312-3334	\N
50	89682367	Cervantes	Xenos	Emerald	Ap #124-8116 Nunc St.	+1 267-963-6551	\N
\.


--
-- Data for Name: writers_books; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.writers_books (book_id, writer_id, books_id, writers_id) FROM stdin;
1	40	\N	\N
2	38	\N	\N
3	32	\N	\N
4	8	\N	\N
5	33	\N	\N
6	8	\N	\N
7	35	\N	\N
8	30	\N	\N
9	25	\N	\N
10	21	\N	\N
11	5	\N	\N
12	2	\N	\N
13	18	\N	\N
14	6	\N	\N
15	18	\N	\N
16	31	\N	\N
17	13	\N	\N
18	26	\N	\N
19	2	\N	\N
20	34	\N	\N
21	20	\N	\N
22	3	\N	\N
23	27	\N	\N
24	5	\N	\N
25	17	\N	\N
26	27	\N	\N
27	36	\N	\N
28	26	\N	\N
29	29	\N	\N
30	29	\N	\N
1	22	\N	\N
2	24	\N	\N
\.


--
-- Name: books_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_id_seq', 1, false);


--
-- Name: contracts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.contracts_id_seq', 1, false);


--
-- Name: customers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.customers_id_seq', 1, false);


--
-- Name: orders_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.orders_id_seq', 1, false);


--
-- Name: writers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.writers_id_seq', 1, false);


--
-- Name: books primary_key_id_books; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books
    ADD CONSTRAINT primary_key_id_books PRIMARY KEY (id);


--
-- Name: contracts primary_key_id_contracts; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts
    ADD CONSTRAINT primary_key_id_contracts PRIMARY KEY (id);


--
-- Name: customers primary_key_id_customers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT primary_key_id_customers PRIMARY KEY (id);


--
-- Name: orders primary_key_id_orders; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT primary_key_id_orders PRIMARY KEY (id);


--
-- Name: writers primary_key_id_writers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.writers
    ADD CONSTRAINT primary_key_id_writers PRIMARY KEY (id);


--
-- Name: books books_delete; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER books_delete BEFORE DELETE ON public.books FOR EACH ROW EXECUTE FUNCTION public.dell_books_trig();


--
-- Name: customers customers_delete; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER customers_delete BEFORE DELETE ON public.customers FOR EACH ROW EXECUTE FUNCTION public.dell_customers_trig();


--
-- Name: orders orders_delete; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER orders_delete BEFORE DELETE ON public.orders FOR EACH ROW EXECUTE FUNCTION public.dell_orders_trig();


--
-- Name: writers writers_delete; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER writers_delete BEFORE DELETE ON public.writers FOR EACH ROW EXECUTE FUNCTION public.dell_writers_trig();


--
-- Name: contracts fk_3394875; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts
    ADD CONSTRAINT fk_3394875 FOREIGN KEY (id_writer) REFERENCES public.writers(id);


--
-- Name: writers fk_dbba00bc; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.writers
    ADD CONSTRAINT fk_dbba00bc FOREIGN KEY (books_id) REFERENCES public.books(id);


--
-- Name: writers_books fk_fc2058de; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.writers_books
    ADD CONSTRAINT fk_fc2058de FOREIGN KEY (books_id) REFERENCES public.books(id);


--
-- Name: writers_books fk_ffc21d2c; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.writers_books
    ADD CONSTRAINT fk_ffc21d2c FOREIGN KEY (writers_id) REFERENCES public.writers(id);


--
-- Name: orders foreign_key_id_book; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT foreign_key_id_book FOREIGN KEY (id_book) REFERENCES public.books(id) ON DELETE CASCADE;


--
-- Name: writers_books foreign_key_id_books; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.writers_books
    ADD CONSTRAINT foreign_key_id_books FOREIGN KEY (book_id) REFERENCES public.books(id);


--
-- Name: orders foreign_key_id_costomer; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT foreign_key_id_costomer FOREIGN KEY (id_customer) REFERENCES public.customers(id) ON DELETE CASCADE;


--
-- Name: contracts foreign_key_id_writers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contracts
    ADD CONSTRAINT foreign_key_id_writers FOREIGN KEY (id_writer) REFERENCES public.writers(id) ON DELETE CASCADE;


--
-- Name: writers_books foreign_key_id_writers; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.writers_books
    ADD CONSTRAINT foreign_key_id_writers FOREIGN KEY (writer_id) REFERENCES public.writers(id);


--
-- PostgreSQL database dump complete
--

